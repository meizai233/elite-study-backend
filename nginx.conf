http {
  upstream backend {
		server 172.29.216.216:8888 weight=1;
  }

  server {
    listen 80;
		server_name elitestudy.fun;
    rewrite ^(.*)$ https://elitestudy.fun$1 permanent;
  }

  server {
    listen 443 ssl;
    server_nameelitestudy.fun;

    # 待办 证书需要和前端共用一个吗
    # 待办 感觉可以合成一份
    ssl_certificate_key  /etc/nginx/conf/ssl/elitestudy.fun-frontend.key;
    ssl_certificate      /etc/nginx/conf/ssl/elitestudy.fun-frontend.pem;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;
    
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;

    location / {
      proxy_pass http://backend/;
      proxy_set_header X-Real-IP $remote_addr; # 获取用户真实的ip
      proxy_set_header X-Forwarded-For $remote_addr;
      # 待办 为啥这里要解析证书的状态
      # 如果使用了 SSL/TLS 客户端证书认证，这个头部能帮助后端服务识别客户端是否通过了证书验证。
      proxy_set_header X-Client-Verify SUCCESS; # 解析证书的状态
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_http_version 1.1;
      # 待办 这又是啥
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_redirect off;
      proxy_buffering off;
    }
  }
}

events {
    worker_connections 1024; ## Default: 1024
}