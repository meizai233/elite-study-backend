# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: backend CI

on:
  # 切换分支
  push:
    branches: ["prod"]

jobs:
  build:
    if: github.ref == 'refs/heads/prod' # 仅在 prod 分支触发
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: deploy file to server
        uses: easingthemes/ssh-deploy@v2.0.7
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-avz --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.SERVER_IP }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

      - name: Clean up previous Docker containers and Docker Run
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.REMOTE_TARGET }} # 进入目标目录
            docker-compose -f docker/docker-compose.backend.yml down # 停止并删除所有服务的容器和网络
            docker-compose -f docker/docker-compose.backend.yml down --rmi all
            docker build -f docker/backend.build.Dockerfile -t backend-course-image . # 根据 Dockerfile 构建新的镜像并标记为 backend-course-image
            docker-compose -f docker/docker-compose.backend.yml up -d # 使用 docker-compose 启动服务，后台运行
